// 격자판에 쓰여진 자연수 중 최댓값의 위치 출력
// borad[행][열] -> 그림 상 3행 4열을 배열연산자로 쓰면 제로베이스 넘버링으로 borad[2][3] = 9 로 작성
// 그래서 보통 이중 for 문을 돌아서 board[i][j] 이런 식으로 씀

function solution(nums) {
  let max = 0;
  let answer = [];
  for (let i = 0; i < 9; i++) {
    for (let j = 0; j < 9; j++) {
      if (nums[i][j] > max) {
        // >= 라고 해주면 행, 열이 가장 큰 것이 답이 됨
        max = nums[i][j];
        x = i + 1;
        y = j + 1;
        // 최댓값이 바뀔 때 그 위치도 저장, [s,y] = [i,j] 로 해서 그냥 리턴해줘도 됨
        // 그리고 실제 나오는 값은 행렬이 1부터 넘버링 되어야 하기 때문에 +1 해줘야 함
      }
    }
  }
  answer.push(x);
  answer.push(y);
  return answer;
}

console.log(
  solution([
    [3, 23, 85, 34, 17, 74, 25, 52, 65],
    [10, 7, 39, 42, 88, 52, 14, 72, 63],
    [87, 42, 18, 78, 53, 45, 18, 84, 53],
    [34, 28, 64, 85, 12, 16, 75, 36, 55],
    [21, 77, 45, 35, 28, 75, 90, 76, 1],
    [25, 87, 65, 15, 28, 11, 37, 28, 74],
    [65, 27, 75, 41, 7, 89, 78, 64, 39],
    [47, 47, 70, 45, 23, 65, 3, 41, 44],
    [87, 13, 82, 38, 31, 12, 29, 29, 80],
  ])
);
