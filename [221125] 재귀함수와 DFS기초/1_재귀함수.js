// 재귀함수를 이용해 자연수 n 에 대해 1 ~ n 까지 반환

// 재귀함수: 스택과 같다. 함수가 호출되면 스택이라는 자료구조에 스택프레임이라는 것이 생김, 함수가 호출되면 매개변수와 지역변수(함수안에서 생성된 변수), 복귀주소(할 일이 끝나면 제자리로 복귀) 를 컨트롤함, 스택 상단의 프레임이 작동함, dfs(n-1) 을 만나는 순간 호출이 일어나면 그 자리까지 했다고 슬립상태에 들어가고 dfs(2) 가 작동됨, 다시 2에 대해 dfs(n-1) 호출되면 그 자리까지 했다고 기억하고 dfs(1) 이 호출, 이것이 반복~, 그리고 dfs(0) 이 되면 return 이 되고 스택상단의 d(0) 은 그냥 스택에서 사라지고, dfs(1) 들어가면 함수 끝에서 dfs(n-1) 라인으로 올라가서 다음 라인인 console.log(n) 이 출력되고 dfs(1) 삭제, 이것이 스택에서 다 사라질 때까지 반복~

// 강사님:

function DFS(n) {
  if (n === 0) return;
  else {
    DFS(n - 1);
    console.log(n);
  }
}

DFS(3);

// 추가? 일직선상에 1 2 5 8 9 10 에 집이 있는데 각 집에 사는 총 6명이 어느 한 군데에 모이려고 한다 그 때 그 곳으로 사람들이 이동하는 총 합의 최소 거리 반환,
// 나는 이진탐색을 이용해 1~10 의 중앙지점을 계속 탐색
// 강사님: 1과 10에 있는 사람이 어느 지점이든 이동하려면 9가 나옴, 그리고 2와 9에 있는 사람들이 그 사이 어느 지점이든 7이 나옴, 그리고 5와 8에 있는 사람이        최종으로 각 값을 더한 것이 최소 거리

// 두번째 격자 문제도 필기하기!!!
